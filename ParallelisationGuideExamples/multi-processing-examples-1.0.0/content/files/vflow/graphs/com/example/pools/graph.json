{
	"properties": {},
	"description": "[Ex] Process Pools",
	"processes": {
		"constantgenerator1": {
			"component": "com.sap.util.constantGenerator",
			"metadata": {
				"label": "250ms Generator",
				"x": 17,
				"y": 12,
				"height": 80,
				"width": 120,
				"extensible": true,
				"generation": 1,
				"config": {
					"mode": "pulse",
					"duration": "250ms"
				}
			}
		},
		"python3operator1": {
			"component": "com.sap.system.python3Operator",
			"metadata": {
				"label": "Capture Time (10)",
				"x": 524,
				"y": 12,
				"height": 80,
				"width": 120,
				"extensible": true,
				"filesRequired": [
					"script.py"
				],
				"generation": 1,
				"config": {
					"script": "from datetime import datetime\nlast = datetime.now()\nn_inputs = 0\n\ndef on_input(data):\n    global last\n    global n_inputs\n    n_inputs += 1\n    \n    if n_inputs == 10:\n        now = datetime.now()\n        diff = now - last\n        last = now\n        n_inputs = 0\n        api.send(\"out\", str(diff))\n\napi.set_port_callback(\"in\", on_input)"
				},
				"additionalinports": [
					{
						"name": "in",
						"type": "string"
					}
				],
				"additionaloutports": [
					{
						"name": "out",
						"type": "string"
					}
				]
			}
		},
		"wiretap1": {
			"component": "com.sap.util.wiretap",
			"metadata": {
				"label": "Wiretap",
				"x": 693,
				"y": 12,
				"height": 80,
				"width": 120,
				"generation": 1,
				"ui": "dynpath",
				"config": {}
			}
		},
		"python3operator2": {
			"component": "com.sap.system.python3Operator",
			"metadata": {
				"label": "1s ",
				"x": 355,
				"y": 12,
				"height": 80,
				"width": 120,
				"extensible": true,
				"filesRequired": [
					"script.py"
				],
				"generation": 1,
				"config": {
					"script": "from multiprocessing import Pool, get_context\nfrom operators.com.example.multi import parallel_fun3\n\n# Pool\ndef on_input(data):\n    # the list of messages is in the input data's body\n    messages = data.body\n    api.logger.info(\"logs before Parallel start\")\n    # Create a pool with 10 processes\n    with get_context(\"spawn\").Pool(10) as pool:\n        # Run parallel function and split the input among them\n        results = pool.map(parallel_fun3, data.body)\n        # Send out the results as single messages\n        for result in results:\n            api.send(\"out\", result)\n    api.logger.info(\"logs after Parallel start\")\n\napi.set_port_callback(\"batch\", on_input)"
				},
				"additionalinports": [
					{
						"name": "batch",
						"type": "message"
					}
				],
				"additionaloutports": [
					{
						"name": "out",
						"type": "string"
					}
				]
			}
		},
		"python3operator3": {
			"component": "com.sap.system.python3Operator",
			"metadata": {
				"label": "collect 10 messages",
				"x": 186,
				"y": 12,
				"height": 80,
				"width": 120,
				"extensible": true,
				"filesRequired": [
					"script.py"
				],
				"generation": 1,
				"config": {
					"script": "messages = []\ndef on_input(message):\n    global messages\n    # Collect messages in a list\n    messages.append(message)\n    # Until we have 10 and send them out as a batch of 10 messages\n    if len(messages) == 10:\n        api.send(\"batch\", messages.copy())\n        # Reset the variable for the next batch\n        messages = []\n        \napi.set_port_callback(\"in\", on_input)"
				},
				"additionalinports": [
					{
						"name": "in",
						"type": "string"
					}
				],
				"additionaloutports": [
					{
						"name": "batch",
						"type": "message"
					}
				]
			}
		}
	},
	"groups": [],
	"connections": [
		{
			"metadata": {
				"points": "648,52 688,52"
			},
			"src": {
				"port": "out",
				"process": "python3operator1"
			},
			"tgt": {
				"port": "in",
				"process": "wiretap1"
			}
		},
		{
			"metadata": {
				"points": "479,52 519,52"
			},
			"src": {
				"port": "out",
				"process": "python3operator2"
			},
			"tgt": {
				"port": "in",
				"process": "python3operator1"
			}
		},
		{
			"metadata": {
				"points": "310,52 350,52"
			},
			"src": {
				"port": "batch",
				"process": "python3operator3"
			},
			"tgt": {
				"port": "batch",
				"process": "python3operator2"
			}
		},
		{
			"metadata": {
				"points": "141,52 181,52"
			},
			"src": {
				"port": "out",
				"process": "constantgenerator1"
			},
			"tgt": {
				"port": "in",
				"process": "python3operator3"
			}
		}
	],
	"inports": {},
	"outports": {},
	"metadata": {
		"generation": 1
	}
}
